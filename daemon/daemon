#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright Â© 2009-2011 Alexander Kojevnikov <alexander@kojevnikov.com>
#
# muspy is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# muspy is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with muspy.  If not, see <http://www.gnu.org/licenses/>.

# Allow the cron script to run in the Django project context
import os, sys
sys.path.append(os.path.abspath(os.path.dirname(__file__) + '/../..'))
sys.path.append(os.path.abspath(os.path.dirname(__file__) + '/..'))
os.environ['DJANGO_SETTINGS_MODULE'] = 'muspy.settings'

import logging
import time
import traceback

from django.core.mail import mail_admins

from daemon import notifications, releases

def daemon():
    """Perform background processing.

    * Periodically check for new releases and send email notifications.
    * Process background jobs triggered by the users.

    """
    start = time.time()
    releases.check()
    notifications.send()
    logging.info("Cycle wall time: %.4f days" % ((time.time() - start) / 86400))


if __name__ == '__main__':
    logging.basicConfig(stream=sys.stdout, level=logging.INFO, format='%(asctime)s %(message)s')
    try:
        daemon()
    except:
        logging.error('Daemon error, notifying admins and restarting')
        try:
            mail_admins('Daemon error', traceback.format_exc())
        except:
            logging.error('!!! Could not send the email !!!')
            logging.error(traceback.format_exc())
